rho_ss * phi_ss_sim1 * phi_ss_sim2) /
(sigma_tot1 * sigma_tot2)
cov_tau <- matrix(c(tau_sim1^2, rho_tau * tau_sim1 * tau_sim2,
rho_tau * tau_sim1 * tau_sim2, tau_sim2^2), ncol = 2)
cov_s2s <- matrix(c(phi_s2s_sim1^2, rho_s2s * phi_s2s_sim1 * phi_s2s_sim2,
rho_s2s * phi_s2s_sim1 * phi_s2s_sim2, phi_s2s_sim2^2), ncol = 2)
cov_ss <- matrix(c(phi_ss_sim1^2, rho_ss * phi_ss_sim1 * phi_ss_sim2,
rho_ss * phi_ss_sim1 * phi_ss_sim2, phi_ss_sim2^2), ncol = 2)
eqt2 <- mvtnorm::rmvnorm(n_eq, sigma = cov_tau)
statt2 <- mvtnorm::rmvnorm(n_stat, sigma = cov_s2s)
rect2 <- mvtnorm::rmvnorm(n_rec, sigma = cov_ss)
data_reg$y_sim1 <- eqt2[eq,1] + statt2[stat,1] + rect2[,1]
data_reg$y_sim2 <- eqt2[eq,2] + statt2[stat,2] + rect2[,2]
fit_sim1 <- lmer(y_sim1 ~ (1 | eq) + (1 | stat), data_reg)
fit_sim2 <- lmer(y_sim2 ~ (1 | eq) + (1 | stat), data_reg)
dB1 <- ranef(fit_sim1)$eq$`(Intercept)`
dS1 <- ranef(fit_sim1)$stat$`(Intercept)`
dWS1 <- resid(fit_sim1)
dR1 <- data_reg$y_sim1 - predict(fit_sim1, re.form=NA)
dB2 <- ranef(fit_sim2)$eq$`(Intercept)`
dS2 <- ranef(fit_sim2)$stat$`(Intercept)`
dWS2 <- resid(fit_sim2)
dR2 <- data_reg$y_sim2 - predict(fit_sim2, re.form=NA)
sds1 <- as.data.frame(VarCorr(fit_sim1))$sdcor
sds2 <- as.data.frame(VarCorr(fit_sim2))$sdcor
sds1a <- c(sd(dS1), sd(dB1), sd(dWS1))
sds2a <- c(sd(dS2), sd(dB2), sd(dWS2))
rho_t <- (sds1[1] * sds2[1] * cor(dS1, dS2) +
sds1[2] * sds2[2] * cor(dB1, dB2) +
sds1[3] * sds2[3] * cor(dWS1, dWS2)) /
(sqrt(sum(sds1^2)) * sqrt(sum(sds2^2)))
rho_ta <- (sds1a[1] * sds2a[1] * cor(dS1, dS2) +
sds1a[2] * sds2a[2] * cor(dB1, dB2) +
sds1a[3] * sds2a[3] * cor(dWS1, dWS2)) /
(sqrt(sum(sds1a^2)) * sqrt(sum(sds2a^2)))
df <- data.frame(dS = c(rho_s2s, cor(dS1,dS2), cov(dS1,dS2)/(sd(dS1) * sd(dS2)), cov(dS1,dS2)/(sds1[1] * sds2[1])),
dB = c(rho_tau, cor(dB1,dB2), cov(dB1,dB2)/(sd(dB1) * sd(dB2)), cov(dB1,dB2)/(sds1[2] * sds2[2])),
dWS = c(rho_ss, cor(dWS1,dWS2), cov(dWS1,dWS2)/(sd(dWS1) * sd(dWS2)), cov(dWS1,dWS2)/(sds1[3] * sds2[3])),
dR = c(rho_total, cor(dR1, dR2), rho_t, rho_ta),
row.names = c('true','cor','cov/sd(point estimate)','cov()/hat()'))
knitr::kable(df, digits = 3, row.names = TRUE,
caption = "Estimated correlation coefficients.")
cor(eqt2)
cor(eqt2)[1,2]
rm(list = ls())
library(lme4)
library(tidyverse)
data_reg <- read.csv(file.path('../data','data_cb.csv'))
setwd('/Users/nico/GROUNDMOTION/PROJECTS/RESID_VAR/Git/MixedModels_Biases/r/')
rm(list = ls())
library(lme4)
library(tidyverse)
data_reg <- read.csv(file.path('../data','data_cb.csv'))
eq <- data_reg$eq
stat <- data_reg$stat
n_rec <- nrow(data_reg)
n_eq <- max(eq)
n_stat <- max(stat)
# --------------------------------------------------
# correlaton
tau_sim1 <- 0.4
phi_s2s_sim1 <- 0.43
phi_ss_sim1 <- 0.5
tau_sim2 <- 0.45
phi_s2s_sim2 <- 0.4
phi_ss_sim2 <- 0.55
cor_name <- 'high'
rho_tau <- 0.95
rho_ss <- 0.9
rho_s2s <- 0.85
sigma_tot1 <- sqrt(tau_sim1^2 + phi_s2s_sim1^2 + phi_ss_sim1^2)
sigma_tot2 <- sqrt(tau_sim2^2 + phi_s2s_sim2^2 + phi_ss_sim2^2)
rho_total <- (rho_tau * tau_sim1 * tau_sim2 + rho_s2s * phi_s2s_sim1 * phi_s2s_sim2 + rho_ss * phi_ss_sim1 * phi_ss_sim2) /
(sigma_tot1 * sigma_tot2)
cov_tau <- matrix(c(tau_sim1^2, rho_tau * tau_sim1 * tau_sim2,
rho_tau * tau_sim1 * tau_sim2, tau_sim2^2), ncol = 2)
cov_s2s <- matrix(c(phi_s2s_sim1^2, rho_s2s * phi_s2s_sim1 * phi_s2s_sim2,
rho_s2s * phi_s2s_sim1 * phi_s2s_sim2, phi_s2s_sim2^2), ncol = 2)
cov_ss <- matrix(c(phi_ss_sim1^2, rho_ss * phi_ss_sim1 * phi_ss_sim2,
rho_ss * phi_ss_sim1 * phi_ss_sim2, phi_ss_sim2^2), ncol = 2)
n_sam <- 200
mat_cor <- matrix(nrow = n_sam, ncol = 9)
mat_cor_prior <- matrix(nrow = n_sam, ncol = 4)
set.seed(5618)
n_sam <- 200
mat_cor <- matrix(nrow = n_sam, ncol = 9)
mat_cor_sample <- matrix(nrow = n_sam, ncol = 4)
set.seed(5618)
for(i in 1:n_sam) {
eqt2 <- mvtnorm::rmvnorm(n_eq, sigma = cov_tau)
statt2 <- mvtnorm::rmvnorm(n_stat, sigma = cov_s2s)
rect2 <- mvtnorm::rmvnorm(n_rec, sigma = cov_ss)
data_reg$y_sim1 <- eqt2[eq,1] + statt2[stat,1] + rect2[,1]
data_reg$y_sim2 <- eqt2[eq,2] + statt2[stat,2] + rect2[,2]
mat_cor_sample[i,] <- c(cor(statt2)[1,2],cor(eqt2)[1,2],cor(rect2)[1,2],cor(data_reg$y_sim1, data_reg$y_sim2))
fit_sim1 <- lmer(y_sim1 ~ (1 | eq) + (1 | stat), data_reg)
fit_sim2 <- lmer(y_sim2 ~ (1 | eq) + (1 | stat), data_reg)
dB1 <- ranef(fit_sim1)$eq$`(Intercept)`
dS1 <- ranef(fit_sim1)$stat$`(Intercept)`
dWS1 <- resid(fit_sim1)
dR1 <- data_reg$y_sim1 - predict(fit_sim1, re.form=NA)
dB2 <- ranef(fit_sim2)$eq$`(Intercept)`
dS2 <- ranef(fit_sim2)$stat$`(Intercept)`
dWS2 <- resid(fit_sim2)
dR2 <- data_reg$y_sim2 - predict(fit_sim2, re.form=NA)
sds1 <- as.data.frame(VarCorr(fit_sim1))$sdcor
sds2 <- as.data.frame(VarCorr(fit_sim2))$sdcor
sds1a <- c(sd(dS1), sd(dB1), sd(dWS1))
sds2a <- c(sd(dS2), sd(dB2), sd(dWS2))
mat_cor[i,] <- c(cor(dS1, dS2), cor(dB1, dB2), cor(dWS1, dWS2), cor(dR1, dR2),
(sds1[1] * sds2[1] * cor(dS1, dS2) + sds1[2] * sds2[2] * cor(dB1, dB2) + sds1[3] * sds2[3] * cor(dWS1, dWS2)) /
(sqrt(sum(sds1^2)) * sqrt(sum(sds2^2))),
cov(dS1,dS2)/(sds1[1] * sds2[1]),
cov(dB1,dB2)/(sds1[2] * sds2[2]),
cov(dWS1,dWS2)/(sds1[3] * sds2[3]),
(sds1a[1] * sds2a[1] * cor(dS1, dS2) + sds1a[2] * sds2a[2] * cor(dB1, dB2) + sds1a[3] * sds2a[3] * cor(dWS1, dWS2)) /
(sqrt(sum(sds1a^2)) * sqrt(sum(sds2a^2)))
)
}
for(cor_name in c('high','low')) {
if(cor_name == 'high') {
rho_tau <- 0.95
rho_ss <- 0.9
rho_s2s <- 0.85
} else {
rho_tau <- 0.45
rho_ss <- 0.5
rho_s2s <- 0.55
}
rho_total <- (rho_tau * tau_sim1 * tau_sim2 + rho_s2s * phi_s2s_sim1 * phi_s2s_sim2 + rho_ss * phi_ss_sim1 * phi_ss_sim2) /
(sigma_tot1 * sigma_tot2)
cov_tau <- matrix(c(tau_sim1^2, rho_tau * tau_sim1 * tau_sim2,
rho_tau * tau_sim1 * tau_sim2, tau_sim2^2), ncol = 2)
cov_s2s <- matrix(c(phi_s2s_sim1^2, rho_s2s * phi_s2s_sim1 * phi_s2s_sim2,
rho_s2s * phi_s2s_sim1 * phi_s2s_sim2, phi_s2s_sim2^2), ncol = 2)
cov_ss <- matrix(c(phi_ss_sim1^2, rho_ss * phi_ss_sim1 * phi_ss_sim2,
rho_ss * phi_ss_sim1 * phi_ss_sim2, phi_ss_sim2^2), ncol = 2)
n_sam <- 10
mat_cor <- matrix(nrow = n_sam, ncol = 9)
mat_cor_sample <- matrix(nrow = n_sam, ncol = 4)
set.seed(5618)
for(i in 1:n_sam) {
eqt2 <- mvtnorm::rmvnorm(n_eq, sigma = cov_tau)
statt2 <- mvtnorm::rmvnorm(n_stat, sigma = cov_s2s)
rect2 <- mvtnorm::rmvnorm(n_rec, sigma = cov_ss)
data_reg$y_sim1 <- eqt2[eq,1] + statt2[stat,1] + rect2[,1]
data_reg$y_sim2 <- eqt2[eq,2] + statt2[stat,2] + rect2[,2]
mat_cor_sample[i,] <- c(cor(statt2)[1,2],cor(eqt2)[1,2],cor(rect2)[1,2],cor(data_reg$y_sim1, data_reg$y_sim2))
fit_sim1 <- lmer(y_sim1 ~ (1 | eq) + (1 | stat), data_reg)
fit_sim2 <- lmer(y_sim2 ~ (1 | eq) + (1 | stat), data_reg)
dB1 <- ranef(fit_sim1)$eq$`(Intercept)`
dS1 <- ranef(fit_sim1)$stat$`(Intercept)`
dWS1 <- resid(fit_sim1)
dR1 <- data_reg$y_sim1 - predict(fit_sim1, re.form=NA)
dB2 <- ranef(fit_sim2)$eq$`(Intercept)`
dS2 <- ranef(fit_sim2)$stat$`(Intercept)`
dWS2 <- resid(fit_sim2)
dR2 <- data_reg$y_sim2 - predict(fit_sim2, re.form=NA)
sds1 <- as.data.frame(VarCorr(fit_sim1))$sdcor
sds2 <- as.data.frame(VarCorr(fit_sim2))$sdcor
sds1a <- c(sd(dS1), sd(dB1), sd(dWS1))
sds2a <- c(sd(dS2), sd(dB2), sd(dWS2))
mat_cor[i,] <- c(cor(dS1, dS2), cor(dB1, dB2), cor(dWS1, dWS2), cor(dR1, dR2),
(sds1[1] * sds2[1] * cor(dS1, dS2) + sds1[2] * sds2[2] * cor(dB1, dB2) + sds1[3] * sds2[3] * cor(dWS1, dWS2)) /
(sqrt(sum(sds1^2)) * sqrt(sum(sds2^2))),
cov(dS1,dS2)/(sds1[1] * sds2[1]),
cov(dB1,dB2)/(sds1[2] * sds2[2]),
cov(dWS1,dWS2)/(sds1[3] * sds2[3]),
(sds1a[1] * sds2a[1] * cor(dS1, dS2) + sds1a[2] * sds2a[2] * cor(dB1, dB2) + sds1a[3] * sds2a[3] * cor(dWS1, dWS2)) /
(sqrt(sum(sds1a^2)) * sqrt(sum(sds2a^2)))
)
}
save(mat_cor, mat_cor_sample,
file = sprintf('../results/res_corrre_CB14_%s.Rdata', cor_name))
}
load(file.path('./Git/MixedModels_Biases/', 'results',
'res_corrre_CB14_high.Rdata')))
setwd('/Users/nico/GROUNDMOTION/PROJECTS/RESID_VAR/')
load(file.path('./Git/MixedModels_Biases/', 'results',
'res_corrre_CB14_high.Rdata')))
load(file.path('./Git/MixedModels_Biases/', 'results',
'res_corrre_CB14_high.Rdata'))
load(file.path('./Git/MixedModels_Biases/', 'results',
'res_corrre_CB14_high.Rdata'))
wrap_plots(
data.frame(mat_cor[,c(1,6)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,1]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_s2s, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta S_1, \\delta S_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c(TeX('$\\rho_{sample}$'),
TeX('$cov_{sample}/(\\hat{\\sigma}_{1} \\; \\hat{\\sigma}_{2})$'))) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = c(0.4,0.8),
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.25,0.6)),
lims(x = c(0.45,0.95)),
data.frame(mat_cor[,c(2,7)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,2]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_tau, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta B_1, \\delta B_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c(TeX('$\\rho_{sample}$'),'re2')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = 'none',
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.3,0.6)),
lims(x = c(0.8,1.0)),
data.frame(mat_cor[,c(3,8)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,3]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_ss, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta WS_1, \\delta WS_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c('re','re2')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = 'none',
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.4,0.55)),
lims(x = c(0.8,0.95)),
data.frame(mat_cor[,c(4,5,9)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_total, linewidth = lw) +
labs(x = TeX('$\\rho_{total}$')) +
scale_color_manual(values = c('red','blue','cyan'),
labels = c("(1)","(2)",'(3)')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = c(0.2,0.8),
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.45,0.55))
lims(x = c(0.875,0.925))
)
load(file.path('./Git/MixedModels_Biases/', 'results',
'res_corrre_CB14_high.Rdata'))
patchwork::wrap_plots(
data.frame(mat_cor[,c(1,6)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,1]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_s2s, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta S_1, \\delta S_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c(TeX('$\\rho_{sample}$'),
TeX('$cov_{sample}/(\\hat{\\sigma}_{1} \\; \\hat{\\sigma}_{2})$'))) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = c(0.4,0.8),
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.25,0.6)),
lims(x = c(0.45,0.95)),
data.frame(mat_cor[,c(2,7)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,2]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_tau, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta B_1, \\delta B_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c(TeX('$\\rho_{sample}$'),'re2')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = 'none',
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.3,0.6)),
lims(x = c(0.8,1.0)),
data.frame(mat_cor[,c(3,8)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,3]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_ss, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta WS_1, \\delta WS_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c('re','re2')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = 'none',
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.4,0.55)),
lims(x = c(0.8,0.95)),
data.frame(mat_cor[,c(4,5,9)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_total, linewidth = lw) +
labs(x = TeX('$\\rho_{total}$')) +
scale_color_manual(values = c('red','blue','cyan'),
labels = c("(1)","(2)",'(3)')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = c(0.2,0.8),
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.45,0.55))
lims(x = c(0.875,0.925))
)
lw <-1.5
load(file.path('./Git/MixedModels_Biases/', 'results',
'res_corrre_CB14_high.Rdata'))
patchwork::wrap_plots(
data.frame(mat_cor[,c(1,6)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,1]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_s2s, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta S_1, \\delta S_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c(TeX('$\\rho_{sample}$'),
TeX('$cov_{sample}/(\\hat{\\sigma}_{1} \\; \\hat{\\sigma}_{2})$'))) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = c(0.4,0.8),
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.25,0.6)),
lims(x = c(0.45,0.95)),
data.frame(mat_cor[,c(2,7)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,2]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_tau, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta B_1, \\delta B_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c(TeX('$\\rho_{sample}$'),'re2')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = 'none',
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.3,0.6)),
lims(x = c(0.8,1.0)),
data.frame(mat_cor[,c(3,8)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,3]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_ss, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta WS_1, \\delta WS_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c('re','re2')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = 'none',
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.4,0.55)),
lims(x = c(0.8,0.95)),
data.frame(mat_cor[,c(4,5,9)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_total, linewidth = lw) +
labs(x = TeX('$\\rho_{total}$')) +
scale_color_manual(values = c('red','blue','cyan'),
labels = c("(1)","(2)",'(3)')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = c(0.2,0.8),
legend.key.width = unit(2,'cm')) +
#lims(x = c(0.45,0.55))
lims(x = c(0.875,0.925))
)
load(file.path('./Git/MixedModels_Biases/', 'results',
'res_corrre_CB14_low.Rdata'))
patchwork::wrap_plots(
data.frame(mat_cor[,c(1,6)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,1]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_s2s, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta S_1, \\delta S_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c(TeX('$\\rho_{sample}$'),
TeX('$cov_{sample}/(\\hat{\\sigma}_{1} \\; \\hat{\\sigma}_{2})$'))) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = c(0.4,0.8),
legend.key.width = unit(2,'cm')) +
lims(x = c(0.25,0.6)),
data.frame(mat_cor[,c(2,7)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,2]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_tau, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta B_1, \\delta B_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c(TeX('$\\rho_{sample}$'),'re2')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = 'none',
legend.key.width = unit(2,'cm')) +
lims(x = c(0.3,0.6)),
data.frame(mat_cor[,c(3,8)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(data.frame(x = mat_cor_sample[,3]),
mapping = aes(x = x), color = 'gray', linewidth = lw) +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_ss, linewidth = lw) +
labs(x = TeX('$\\rho(\\delta WS_1, \\delta WS_2)$')) +
scale_color_manual(values = c('red','blue'),
labels = c('re','re2')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = 'none',
legend.key.width = unit(2,'cm')) +
lims(x = c(0.4,0.55)),
data.frame(mat_cor[,c(4,5,9)]) %>%
pivot_longer(everything()) %>%
ggplot() +
geom_density(aes(x = value, color = name), linewidth = lw, key_glyph = draw_key_path) +
geom_vline(xintercept = rho_total, linewidth = lw) +
labs(x = TeX('$\\rho_{total}$')) +
scale_color_manual(values = c('red','blue','cyan'),
labels = c("(1)","(2)",'(3)')) +
guides(color = guide_legend(title = NULL)) +
theme(legend.position = c(0.2,0.8),
legend.key.width = unit(2,'cm')) +
lims(x = c(0.45,0.55))
)
rm(list = ls())
library(lme4)
library(tidyverse)
data_reg <- read.csv(file.path('../data','data_cb.csv'))
setwd('/Users/nico/GROUNDMOTION/PROJECTS/RESID_VAR/Git/MixedModels_Biases/r/')
rm(list = ls())
library(lme4)
library(tidyverse)
data_reg <- read.csv(file.path('../data','data_cb.csv'))
eq <- data_reg$eq
stat <- data_reg$stat
n_rec <- nrow(data_reg)
n_eq <- max(eq)
n_stat <- max(stat)
# --------------------------------------------------
# correlaton
tau_sim1 <- 0.4
phi_s2s_sim1 <- 0.43
phi_ss_sim1 <- 0.5
tau_sim2 <- 0.45
phi_s2s_sim2 <- 0.4
phi_ss_sim2 <- 0.55
sigma_tot1 <- sqrt(tau_sim1^2 + phi_s2s_sim1^2 + phi_ss_sim1^2)
sigma_tot2 <- sqrt(tau_sim2^2 + phi_s2s_sim2^2 + phi_ss_sim2^2)
for(cor_name in c('high','low')) {
print(cor_name)
if(cor_name == 'high') {
rho_tau <- 0.95
rho_ss <- 0.9
rho_s2s <- 0.85
} else {
rho_tau <- 0.45
rho_ss <- 0.5
rho_s2s <- 0.55
}
rho_total <- (rho_tau * tau_sim1 * tau_sim2 + rho_s2s * phi_s2s_sim1 * phi_s2s_sim2 + rho_ss * phi_ss_sim1 * phi_ss_sim2) /
(sigma_tot1 * sigma_tot2)
cov_tau <- matrix(c(tau_sim1^2, rho_tau * tau_sim1 * tau_sim2,
rho_tau * tau_sim1 * tau_sim2, tau_sim2^2), ncol = 2)
cov_s2s <- matrix(c(phi_s2s_sim1^2, rho_s2s * phi_s2s_sim1 * phi_s2s_sim2,
rho_s2s * phi_s2s_sim1 * phi_s2s_sim2, phi_s2s_sim2^2), ncol = 2)
cov_ss <- matrix(c(phi_ss_sim1^2, rho_ss * phi_ss_sim1 * phi_ss_sim2,
rho_ss * phi_ss_sim1 * phi_ss_sim2, phi_ss_sim2^2), ncol = 2)
n_sam <- 200
mat_cor <- matrix(nrow = n_sam, ncol = 9)
mat_cor_sample <- matrix(nrow = n_sam, ncol = 4)
set.seed(5618)
for(i in 1:n_sam) {
eqt2 <- mvtnorm::rmvnorm(n_eq, sigma = cov_tau)
statt2 <- mvtnorm::rmvnorm(n_stat, sigma = cov_s2s)
rect2 <- mvtnorm::rmvnorm(n_rec, sigma = cov_ss)
data_reg$y_sim1 <- eqt2[eq,1] + statt2[stat,1] + rect2[,1]
data_reg$y_sim2 <- eqt2[eq,2] + statt2[stat,2] + rect2[,2]
mat_cor_sample[i,] <- c(cor(statt2)[1,2],cor(eqt2)[1,2],cor(rect2)[1,2],cor(data_reg$y_sim1, data_reg$y_sim2))
fit_sim1 <- lmer(y_sim1 ~ (1 | eq) + (1 | stat), data_reg)
fit_sim2 <- lmer(y_sim2 ~ (1 | eq) + (1 | stat), data_reg)
dB1 <- ranef(fit_sim1)$eq$`(Intercept)`
dS1 <- ranef(fit_sim1)$stat$`(Intercept)`
dWS1 <- resid(fit_sim1)
dR1 <- data_reg$y_sim1 - predict(fit_sim1, re.form=NA)
dB2 <- ranef(fit_sim2)$eq$`(Intercept)`
dS2 <- ranef(fit_sim2)$stat$`(Intercept)`
dWS2 <- resid(fit_sim2)
dR2 <- data_reg$y_sim2 - predict(fit_sim2, re.form=NA)
sds1 <- as.data.frame(VarCorr(fit_sim1))$sdcor
sds2 <- as.data.frame(VarCorr(fit_sim2))$sdcor
sds1a <- c(sd(dS1), sd(dB1), sd(dWS1))
sds2a <- c(sd(dS2), sd(dB2), sd(dWS2))
mat_cor[i,] <- c(cor(dS1, dS2), cor(dB1, dB2), cor(dWS1, dWS2), cor(dR1, dR2),
(sds1[1] * sds2[1] * cor(dS1, dS2) + sds1[2] * sds2[2] * cor(dB1, dB2) + sds1[3] * sds2[3] * cor(dWS1, dWS2)) /
(sqrt(sum(sds1^2)) * sqrt(sum(sds2^2))),
cov(dS1,dS2)/(sds1[1] * sds2[1]),
cov(dB1,dB2)/(sds1[2] * sds2[2]),
cov(dWS1,dWS2)/(sds1[3] * sds2[3]),
(sds1a[1] * sds2a[1] * cor(dS1, dS2) + sds1a[2] * sds2a[2] * cor(dB1, dB2) + sds1a[3] * sds2a[3] * cor(dWS1, dWS2)) /
(sqrt(sum(sds1a^2)) * sqrt(sum(sds2a^2)))
)
}
save(mat_cor, mat_cor_sample,
file = sprintf('../results/res_corrre_CB14_%s.Rdata', cor_name))
}
