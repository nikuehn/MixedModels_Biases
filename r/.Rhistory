data_reg$R <- sqrt(data_reg$Rjb^2+h^2)
data_reg$logVS <- log10(data_reg$VS_gmean/800)*(data_reg$VS_gmean<=1500)+log10(1500/800)*(data_reg$VS_gmean>1500)
head(data_reg)
# -----------------------------------------
# two-step
load(file = file.path('/Users/nico/GROUNDMOTION/PROJECTS/RESID_VAR/Git/MixedModels_Biases/results/',
sprintf('res_twostep_ita18_%s.Rdata', model_name)))
df1 <- data.frame(mat_fix) %>% set_names(names_coeffs)
df1$model <- '1-step'
df2 <- data.frame(mat_fix2) %>% set_names(names_coeffs)
df2$model <- '2-step'
df <- data.frame(name = names_coeffs,
true = coeffs)
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
scale_color_manual(values = c('black','red')) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
colSums(mat_ci)/n_sam
colSums(mat_ci2)/n_sam
colSums(mat_ci_sd)/n_sam
colSums(mat_ci_sd2)/n_sam
names_sds <- c('phi_s2s','tau','phi_ss')
df1 <- data.frame(mat_sd) %>% set_names(names_sds)
df1$model <- '1-step'
df2 <- data.frame(mat_sd2) %>% set_names(names_sds)
df2$model <- '2-step'
df <- data.frame(name = names_sds,
true = sds_sim)
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
data_reg <- read.csv(file.path('../data','data_cb.csv'))
eq <- data_reg$eq
stat <- data_reg$stat
n_rec <- nrow(data_reg)
n_eq <- max(eq)
n_stat <- max(stat)
coeffs <- c(3.421046409, 0.193954090, -0.021982777, 0.287149291, -1.405635476, -0.002911264, -0.394575970)
names_coeffs <- c("intercept", "M1", "M2", "MlogR", "logR", "R", "logVS")
# Set linear predictors
mh = 5.5
mref = 5.324
h = 6.924
data_reg$M1 <- (data_reg$M-mh)*(data_reg$M<=mh)
data_reg$M2 <- (data_reg$M-mh)*(data_reg$M>mh)
data_reg$MlogR <- (data_reg$M-mref)*log10(sqrt(data_reg$Rjb^2+h^2))
data_reg$logR <- log10(sqrt(data_reg$Rjb^2+h^2))
data_reg$R <- sqrt(data_reg$Rjb^2+h^2)
data_reg$logVS <- log10(data_reg$VS_gmean/800)*(data_reg$VS_gmean<=1500)+log10(1500/800)*(data_reg$VS_gmean>1500)
# set parameters
tau_sim <- 0.17
phi_s2s_sim <- 0.23
phi_sim <- 0.2
sds_sim <- c(phi_s2s_sim, tau_sim, phi_ss_sim)
n_sam <- 100
mat_fix <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_fix2 <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_ci <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci2 <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci_sd <- matrix(nrow = n_sam, ncol = 3)
mat_ci_sd2 <- matrix(nrow = n_sam, ncol = 3)
mat_sd <- matrix(nrow = n_sam, ncol = 3)
mat_sd2 <- matrix(nrow = n_sam, ncol = 3)
set.seed(8472)
n_sam <- 10
mat_fix <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_fix2 <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_ci <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci2 <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci_sd <- matrix(nrow = n_sam, ncol = 3)
mat_ci_sd2 <- matrix(nrow = n_sam, ncol = 3)
mat_sd <- matrix(nrow = n_sam, ncol = 3)
mat_sd2 <- matrix(nrow = n_sam, ncol = 3)
set.seed(8472)
for(i in 1:n_sam) {
print(paste('i = ',i))
dWS_sim <- rnorm(n_rec, sd = phi_ss_sim)
dS_sim <- rnorm(n_stat, sd = phi_s2s_sim)
dB_sim <- rnorm(n_eq, sd = tau_sim)
data_reg$y_sim <- as.matrix(data_reg[,names_coeffs]) %*% coeffs + dB_sim[eq] + dS_sim[stat] + dWS_sim
fit_sim <- lmer(y_sim ~ M1 + M2 + MlogR + logR + R + logVS  + (1|eq) + (1|stat), data_reg)
fit_sim2 <- lmer(y_sim ~ M1 + M2 + MlogR + logR + R + logVS  + (1|eq), data_reg)
ci_sim <- confint(fit_sim, level = 0.9)
ci_sim2 <- confint(fit_sim2, level = 0.9)
for(k in 1:length(coeffs)) {mat_ci[i,k] <- sum(coeffs[k] > ci_sim[k+3,1] & coeffs[k] <= ci_sim[k+3,2])}
for(k in 1:length(coeffs)) {mat_ci2[i,k] <- sum(coeffs[k] > ci_sim2[k+2,1] & coeffs[k] <= ci_sim2[k+2,2])}
for(k in 1:length(sds_sim)) {mat_ci_sd[i,k] <- sum(sds_sim[k] > ci_sim[k,1] & sds_sim[k] <= ci_sim[k,2])}
mat_fix[i,] <- fixef(fit_sim)
mat_fix2[i,] <- fixef(fit_sim2)
mat_sd[i,] <- as.data.frame(VarCorr(fit_sim))$sdcor
data_reg$dR2 <- resid(fit_sim2)
fit_sim2a <- lmer(dR2 ~ (1 | stat), data_reg)
tmp <- as.data.frame(VarCorr(fit_sim2a))$sdcor
mat_sd2[i,] <- c(tmp[1], as.data.frame(VarCorr(fit_sim2))$sdcor[1], tmp[2])
ci_sim2a <- confint(fit_sim2a, level = 0.9)
mat_ci_sd2[,] <- c(sum(phi_s2s_sim > ci_sim2a[1,1] & phi_s2s_sim <= ci_sim2a[1,2]),
sum(tau_sim > ci_sim2[1,1] & tau_sim <= ci_sim2[1,2]),
sum(phi_ss_sim > ci_sim2a[2,1] & phi_ss_sim <= ci_sim2a[2,2]))
}
colSums(mat_ci)/n_sam
colSums(mat_ci2)/n_sam
colSums(mat_ci_sd)/n_sam
colSums(mat_ci_sd2)/n_sam
df1 <- data.frame(mat_fix) %>% set_names(names_coeffs)
df1$model <- '1-step'
df2 <- data.frame(mat_fix2) %>% set_names(names_coeffs)
df2$model <- '2-step'
df <- data.frame(name = names_coeffs,
true = coeffs)
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
scale_color_manual(values = c('black','red')) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
as.data.frame(VarCorr(fit_sim))$sdcor
fit_sim
phi_ss_sim
mat_ci_sd2
rm(list = ls())
library(lme4)
library(tidyverse)
library(matrixStats)
data_reg <- read.csv(file.path('../data','data_cb.csv'))
getwd()
rm(list = ls())
library(lme4)
library(tidyverse)
library(matrixStats)
data_reg <- read.csv(file.path('../data','data_cb.csv'))
eq <- data_reg$eq
stat <- data_reg$stat
n_rec <- nrow(data_reg)
n_eq <- max(eq)
n_stat <- max(stat)
coeffs <- c(3.421046409, 0.193954090, -0.021982777, 0.287149291, -1.405635476, -0.002911264, -0.394575970)
names_coeffs <- c("intercept", "M1", "M2", "MlogR", "logR", "R", "logVS")
# Set linear predictors
mh = 5.5
mref = 5.324
h = 6.924
data_reg$M1 <- (data_reg$M-mh)*(data_reg$M<=mh)
data_reg$M2 <- (data_reg$M-mh)*(data_reg$M>mh)
data_reg$MlogR <- (data_reg$M-mref)*log10(sqrt(data_reg$Rjb^2+h^2))
data_reg$logR <- log10(sqrt(data_reg$Rjb^2+h^2))
data_reg$R <- sqrt(data_reg$Rjb^2+h^2)
data_reg$logVS <- log10(data_reg$VS_gmean/800)*(data_reg$VS_gmean<=1500)+log10(1500/800)*(data_reg$VS_gmean>1500)
# set parameters
tau_sim <- 0.17
phi_s2s_sim <- 0.23
phi_ss_sim <- 0.2
sds_sim <- c(phi_s2s_sim, tau_sim, phi_ss_sim)
n_sam <- 10
mat_fix <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_fix2 <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_ci <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci2 <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci_sd <- matrix(nrow = n_sam, ncol = 3)
rm(list = ls())
library(lme4)
library(tidyverse)
library(matrixStats)
data_reg <- read.csv(file.path('../data','data_cb.csv'))
eq <- data_reg$eq
stat <- data_reg$stat
n_rec <- nrow(data_reg)
n_eq <- max(eq)
n_stat <- max(stat)
coeffs <- c(3.421046409, 0.193954090, -0.021982777, 0.287149291, -1.405635476, -0.002911264, -0.394575970)
names_coeffs <- c("intercept", "M1", "M2", "MlogR", "logR", "R", "logVS")
# Set linear predictors
mh = 5.5
mref = 5.324
h = 6.924
data_reg$M1 <- (data_reg$M-mh)*(data_reg$M<=mh)
data_reg$M2 <- (data_reg$M-mh)*(data_reg$M>mh)
data_reg$MlogR <- (data_reg$M-mref)*log10(sqrt(data_reg$Rjb^2+h^2))
data_reg$logR <- log10(sqrt(data_reg$Rjb^2+h^2))
data_reg$R <- sqrt(data_reg$Rjb^2+h^2)
data_reg$logVS <- log10(data_reg$VS_gmean/800)*(data_reg$VS_gmean<=1500)+log10(1500/800)*(data_reg$VS_gmean>1500)
# set parameters
tau_sim <- 0.17
phi_s2s_sim <- 0.23
phi_ss_sim <- 0.2
sds_sim <- c(phi_s2s_sim, tau_sim, phi_ss_sim)
n_sam <- 10
mat_fix <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_fix2 <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_ci <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci2 <- matrix(nrow = n_sam, ncol = length(coeffs))
n_sam <- 100
mat_fix <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_fix2 <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_ci <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci2 <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci_sd <- matrix(nrow = n_sam, ncol = 3)
mat_ci_sd2 <- matrix(nrow = n_sam, ncol = 3)
mat_sd <- matrix(nrow = n_sam, ncol = 3)
mat_sd2 <- matrix(nrow = n_sam, ncol = 3)
set.seed(8472)
print(paste('i = ',i))
dWS_sim <- rnorm(n_rec, sd = phi_ss_sim)
dS_sim <- rnorm(n_stat, sd = phi_s2s_sim)
dB_sim <- rnorm(n_eq, sd = tau_sim)
i <- 1
data_reg$y_sim <- as.matrix(data_reg[,names_coeffs]) %*% coeffs + dB_sim[eq] + dS_sim[stat] + dWS_sim
fit_sim <- lmer(y_sim ~ M1 + M2 + MlogR + logR + R + logVS  + (1|eq) + (1|stat), data_reg)
fit_sim2 <- lmer(y_sim ~ M1 + M2 + MlogR + logR + R + logVS  + (1|eq), data_reg)
ci_sim <- confint(fit_sim, level = 0.9)
ci_sim2 <- confint(fit_sim2, level = 0.9)
for(k in 1:length(coeffs)) {mat_ci[i,k] <- sum(coeffs[k] > ci_sim[k+3,1] & coeffs[k] <= ci_sim[k+3,2])}
for(k in 1:length(coeffs)) {mat_ci2[i,k] <- sum(coeffs[k] > ci_sim2[k+2,1] & coeffs[k] <= ci_sim2[k+2,2])}
mat_ci[i,]
mat_ci2[i,]
fit_sim
fit_sim2
data_reg$dR2 <- resid(fit_sim2)
fit_sim2a <- lmer(dR2 ~ (1 | stat), data_reg)
fit_sim2a
rm(list = ls())
library(lme4)
library(tidyverse)
library(matrixStats)
data_reg <- read.csv(file.path('../data','data_cb.csv'))
eq <- data_reg$eq
stat <- data_reg$stat
n_rec <- nrow(data_reg)
n_eq <- max(eq)
n_stat <- max(stat)
coeffs <- c(3.421046409, 0.193954090, -0.021982777, 0.287149291, -1.405635476, -0.002911264, -0.394575970)
names_coeffs <- c("intercept", "M1", "M2", "MlogR", "logR", "R", "logVS")
# Set linear predictors
mh = 5.5
mref = 5.324
h = 6.924
data_reg$M1 <- (data_reg$M-mh)*(data_reg$M<=mh)
data_reg$M2 <- (data_reg$M-mh)*(data_reg$M>mh)
data_reg$MlogR <- (data_reg$M-mref)*log10(sqrt(data_reg$Rjb^2+h^2))
data_reg$logR <- log10(sqrt(data_reg$Rjb^2+h^2))
data_reg$R <- sqrt(data_reg$Rjb^2+h^2)
data_reg$logVS <- log10(data_reg$VS_gmean/800)*(data_reg$VS_gmean<=1500)+log10(1500/800)*(data_reg$VS_gmean>1500)
# set parameters
tau_sim <- 0.17
phi_s2s_sim <- 0.23
phi_ss_sim <- 0.2
sds_sim <- c(phi_s2s_sim, tau_sim, phi_ss_sim)
n_sam <- 100
mat_fix <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_fix2 <- matrix(ncol = length(coeffs), nrow = n_sam)
mat_ci <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci2 <- matrix(nrow = n_sam, ncol = length(coeffs))
mat_ci_sd <- matrix(nrow = n_sam, ncol = 3)
mat_ci_sd2 <- matrix(nrow = n_sam, ncol = 3)
mat_sd <- matrix(nrow = n_sam, ncol = 3)
mat_sd2 <- matrix(nrow = n_sam, ncol = 3)
set.seed(8472)
for(i in 1:n_sam) {
print(paste('i = ',i))
dWS_sim <- rnorm(n_rec, sd = phi_ss_sim)
dS_sim <- rnorm(n_stat, sd = phi_s2s_sim)
dB_sim <- rnorm(n_eq, sd = tau_sim)
data_reg$y_sim <- as.matrix(data_reg[,names_coeffs]) %*% coeffs + dB_sim[eq] + dS_sim[stat] + dWS_sim
fit_sim <- lmer(y_sim ~ M1 + M2 + MlogR + logR + R + logVS  + (1|eq) + (1|stat), data_reg)
fit_sim2 <- lmer(y_sim ~ M1 + M2 + MlogR + logR + R + logVS  + (1|eq), data_reg)
ci_sim <- confint(fit_sim, level = 0.9)
ci_sim2 <- confint(fit_sim2, level = 0.9)
for(k in 1:length(coeffs)) {mat_ci[i,k] <- sum(coeffs[k] > ci_sim[k+3,1] & coeffs[k] <= ci_sim[k+3,2])}
for(k in 1:length(coeffs)) {mat_ci2[i,k] <- sum(coeffs[k] > ci_sim2[k+2,1] & coeffs[k] <= ci_sim2[k+2,2])}
for(k in 1:length(sds_sim)) {mat_ci_sd[i,k] <- sum(sds_sim[k] > ci_sim[k,1] & sds_sim[k] <= ci_sim[k,2])}
mat_fix[i,] <- fixef(fit_sim)
mat_fix2[i,] <- fixef(fit_sim2)
mat_sd[i,] <- as.data.frame(VarCorr(fit_sim))$sdcor
data_reg$dR2 <- resid(fit_sim2)
fit_sim2a <- lmer(dR2 ~ (1 | stat), data_reg)
tmp <- as.data.frame(VarCorr(fit_sim2a))$sdcor
mat_sd2[i,] <- c(tmp[1], as.data.frame(VarCorr(fit_sim2))$sdcor[1], tmp[2])
ci_sim2a <- confint(fit_sim2a, level = 0.9)
mat_ci_sd2[i,] <- c(sum(phi_s2s_sim > ci_sim2a[1,1] & phi_s2s_sim <= ci_sim2a[1,2]),
sum(tau_sim > ci_sim2[1,1] & tau_sim <= ci_sim2[1,2]),
sum(phi_ss_sim > ci_sim2a[2,1] & phi_ss_sim <= ci_sim2a[2,2]))
}
save(mat_fix, mat_fix2, mat_sd, mat_sd2, mat_ci_sd, mat_ci_sd2, mat_ci, mat_ci2,
file = file.path('../results', 'res_twostep_ita18_CB.Rdata'))
# -----------------------------------------
# two-step
load(file = file.path('/Users/nico/GROUNDMOTION/PROJECTS/RESID_VAR/Git/MixedModels_Biases/results/',
sprintf('res_twostep_ita18_%s.Rdata', model_name)))
rm(list = ls())
library(ggplot2)
library(lme4)
library(cmdstanr)
library(posterior)
library(bayesplot)
library(tidyverse)
library(INLA)
library(matrixStats)
library(latex2exp)
library(patchwork)
set1 <- RColorBrewer::brewer.pal(7, "Set1")
cols <- c("darkblue", "dodgerblue1", "cadetblue2", "white")
set_cmdstan_path('/Users/nico/GROUNDMOTION/SOFTWARE/cmdstan-2.32.2')
cmdstan_path()
cmdstan_version()
source('/Users/nico/GROUNDMOTION/PROJECTS/NONERGODIC/SCENARIO_MAPS/COREG/R_functions/functions_factor.R')
`%notin%` <- Negate(`%in%`)
lw <- 1.5
sp <- 4
wid <- 8
asp <- 0.8
size_title <- 30
size_st <- 20
theme_set(theme_bw() + theme(#panel.grid.minor = element_blank(),
axis.title = element_text(size = size_title),
axis.text = element_text(size = size_st),
plot.title = element_text(size = size_title),
plot.subtitle = element_text(size = size_st),
legend.text = element_text(size = size_st),
legend.title = element_text(size = size_st),
legend.key.width = unit(1, "cm"),
legend.box.background = element_rect(colour = "black"),
panel.grid = element_line(color = "gray",linewidth = 0.75),
legend.spacing.y = unit(0, "pt")
))
breaks <- 10^(-10:10)
minor_breaks <- rep(1:9, 21)*(10^rep(-10:10, each=9))
path_base <- '/Users/nico/GROUNDMOTION/PROJECTS/RESID_VAR'
path_stan <- file.path(path_base, 'STAN')
dir_data <- "/Users/nico/GROUNDMOTION/PROJECTS/NONERGODIC/SCENARIO_MAPS/COREG/"
path_plot <- file.path(path_base, 'PLOTS3')
path_res <-file.path(path_stan, 'RESULTS')
################################################################################
#### data CB
model_name <- 'CB'
# -----------------------------------------
# two-step
load(file = file.path('/Users/nico/GROUNDMOTION/PROJECTS/RESID_VAR/Git/MixedModels_Biases/results/',
sprintf('res_twostep_ita18_%s.Rdata', model_name)))
df1 <- data.frame(mat_fix) %>% set_names(names_coeffs)
df1$model <- '1-step'
# -----------------------------------------
# two-step
coeffs <- c(3.421046409, 0.193954090, -0.021982777, 0.287149291, -1.405635476, -0.002911264, -0.394575970)
names_coeffs <- c("intercept", "M1", "M2", "MlogR", "logR", "R", "logVS")
load(file = file.path('/Users/nico/GROUNDMOTION/PROJECTS/RESID_VAR/Git/MixedModels_Biases/results/',
sprintf('res_twostep_ita18_%s.Rdata', model_name)))
df1 <- data.frame(mat_fix) %>% set_names(names_coeffs)
df1$model <- '1-step'
df2 <- data.frame(mat_fix2) %>% set_names(names_coeffs)
df2$model <- '2-step'
df <- data.frame(name = names_coeffs,
true = coeffs)
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
scale_color_manual(values = c('black','red')) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
pl <- rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
scale_color_manual(values = c('black','red')) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
ggsave(file.path(path_plot, sprintf('plot_sim_dens_twostep_fixef_%s.pdf', model_name)), pl,
width = 3 * wid, height = 3* asp * wid)
names_sds <- c('phi_s2s','tau','phi_ss')
df1 <- data.frame(mat_sd) %>% set_names(names_sds)
df1$model <- '1-step'
df2 <- data.frame(mat_sd2) %>% set_names(names_sds)
df2$model <- '2-step'
df <- data.frame(name = names_sds,
true = sds_sim)
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
df2
sds <- c('phi_s2s','tau','phi_ss')
names_sds <- c('phi_s2s','tau','phi_ss')
df1 <- data.frame(mat_sd) %>% set_names(names_sds)
df1$model <- '1-step'
df2 <- data.frame(mat_sd2) %>% set_names(names_sds)
df2$model <- '2-step'
df <- data.frame(name = names_sds,
true = sds_sim)
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free")
df
df <- data.frame(name = names_sds,
true = sds_sim)
tau_sim <- 0.17
phi_s2s_sim <- 0.23
phi_ss_sim <- 0.2
sds_sim <- c(phi_s2s_sim, tau_sim, phi_ss_sim)
df <- data.frame(name = names_sds,
true = sds_sim)
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
scale_color_manual(values = c('black','red')) +
labs(x = '') +
theme(legend.position = c(0.8,0.2),
strip.text = element_text(size = 20))
rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
scale_color_manual(values = c('black','red')) +
labs(x = '') +
theme(legend.position = c(0.8,0.8),
strip.text = element_text(size = 20))
pl <- rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
scale_color_manual(values = c('black','red')) +
labs(x = '') +
theme(legend.position = c(0.8,0.8),
strip.text = element_text(size = 20))
ggsave(file.path(path_plot, sprintf('plot_sim_dens_twostep_sd_%s.pdf', model_name)), pl,
width = 3 * wid, height = asp * wid)
pl <- rbind(df1 %>% pivot_longer(!model),
df2 %>% pivot_longer(!model)) %>%
ggplot() +
geom_density(aes(x = value, color = model), linewidth = 1.5, key_glyph = draw_key_path) +
facet_wrap(vars(name), scales = "free") +
geom_vline(aes(xintercept = true), data = df, linewidth = 1.5) +
guides(color = guide_legend(title = NULL)) +
scale_color_manual(values = c('black','red')) +
labs(x = '') +
theme(legend.position = c(0.9,0.9),
strip.text = element_text(size = 20))
ggsave(file.path(path_plot, sprintf('plot_sim_dens_twostep_sd_%s.pdf', model_name)), pl,
width = 3 * wid, height = asp * wid)
